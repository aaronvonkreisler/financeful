// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model User {
  id            String          @id @default(cuid())
  firstName     String          @db.VarChar(40)
  displayName   String          @db.VarChar(80)
  email         String          @unique
  password      String
  avatar        String?
  transactions  Transaction[]
  createdAt     DateTime        @default(now())
  categories    Category[]
  account       Account[]
  dailyBalances DailyBalances[]
}

model Transaction {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  payee           String
  description     String?
  amount          Int
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      String?
  type            String
  date            DateTime
  account         Account   @relation(fields: [accountId], references: [id])
  accountId       String
  isCashIn        Boolean   @default(false)
  isCashOut       Boolean   @default(true)
  isUncategorized Boolean   @default(true)
  isTransfer      Boolean   @default(false)
  transferId      String?
}

model Category {
  id                String        @id @default(cuid())
  user              User          @relation(fields: [userId], references: [id])
  userId            String
  name              String        @db.VarChar(100)
  description       String?
  excludeFromBudget Boolean       @default(false)
  isHidden          Boolean       @default(false)
  isIncome          Boolean       @default(false)
  transaction       Transaction[]
  BudgetItem        BudgetItem[]
}

model Account {
  id            String          @id @default(cuid())
  user          User            @relation(fields: [userId], references: [id])
  userId        String
  accountName   String
  accountType   String
  isAsset       Boolean
  isLiability   Boolean
  balance       Int
  bankName      String?
  transaction   Transaction[]
  isInactive    Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  dailyBalances DailyBalances[]
}

model DailyBalances {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Int
  date      DateTime @db.Date
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
}

model Budget {
  id        String       @id @default(cuid())
  month     String
  year      Int
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  items     BudgetItem[]
}

model BudgetItem {
  id           String   @id @default(cuid())
  amount       Int
  budgetAmount Int
  isExpense    Boolean
  isIncome     Boolean
  isTransfer   Boolean
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  budget       Budget   @relation(fields: [budgetId], references: [id])
  budgetId     String
}
